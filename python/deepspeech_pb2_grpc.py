# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import deepspeech_pb2 as deepspeech__pb2


class DeepSpeechStub(object):
  """Service that implements Google Cloud Speech API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SpeechStream = channel.unary_stream(
        '/DeepSpeech/SpeechStream',
        request_serializer=deepspeech__pb2.Request.SerializeToString,
        response_deserializer=deepspeech__pb2.StreamingResult.FromString,
        )


class DeepSpeechServicer(object):
  """Service that implements Google Cloud Speech API.
  """

  def SpeechStream(self, request, context):
    """Performs bidirectional streaming speech recognition: receive results while
    sending audio. This method is only available via the gRPC API (not REST).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeepSpeechServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SpeechStream': grpc.unary_stream_rpc_method_handler(
          servicer.SpeechStream,
          request_deserializer=deepspeech__pb2.Request.FromString,
          response_serializer=deepspeech__pb2.StreamingResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DeepSpeech', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
